{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"cmake","disambiguator":[10568828030510994954,9285551269488375918]},"crate_root":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src","external_crates":[{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9900999727420730539,16351871991686208623]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[935678768029990810,12687294252330385371]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15414107294458135584,17842327533020038381]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14744576377998222371,4073843915290114461]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[4769345343448035315,2451234466140838108]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2267649182805276303,17537543421926717263]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13924915391656659862,15502619944133167721]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[205496676379054437,13926580586680788780]}},{"file_name":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","num":9,"id":{"name":"cc","disambiguator":[8350531056252929845,11689614558427776199]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":29539,"line_start":1,"line_end":774,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":29539,"line_start":1,"line_end":774,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Keldor\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cmake-0.1.33\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"decl_id":null,"docs":" A build dependency for running `cmake` to build a native library","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1272,"byte_end":1294,"line_start":45,"line_end":45,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1567,"byte_end":1573,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55}],"decl_id":null,"docs":" Builder style configuration for a pending CMake build.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2591,"byte_end":2596,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"build","qualname":"::build","value":"fn <P> (path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Builds the native library rooted at `path` with the default cmake options.\n This will return the directory in which the library was installed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2810,"byte_end":2813,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn <P> (path: P) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new blank set of configuration to build the project specified\n at the path `path`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3590,"byte_end":3599,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"generator","qualname":"<Config>::generator","value":"fn <T> (&mut self, generator: T) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the build-tool generator (`-G`) for this compilation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3873,"byte_end":3878,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"cflag","qualname":"<Config>::cflag","value":"fn <P> (&mut self, flag: P) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom flag to pass down to the C compiler, supplementing those\n that this library already passes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4159,"byte_end":4166,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"cxxflag","qualname":"<Config>::cxxflag","value":"fn <P> (&mut self, flag: P) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom flag to pass down to the C++ compiler, supplementing those\n that this library already passes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4402,"byte_end":4408,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"define","qualname":"<Config>::define","value":"fn <K, V> (&mut self, k: K, v: V) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Adds a new `-D` flag to pass to cmake during the generation step.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4858,"byte_end":4870,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"register_dep","qualname":"<Config>::register_dep","value":"fn (&mut self, dep: &str) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Registers a dependency for this compilation on the native library built\n by Cargo previously.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5197,"byte_end":5203,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"target","qualname":"<Config>::target","value":"fn (&mut self, target: &str) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the target triple for this compilation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5382,"byte_end":5397,"line_start":177,"line_end":177,"column_start":12,"column_end":27},"name":"no_build_target","qualname":"<Config>::no_build_target","value":"fn (&mut self, no_build_target: bool) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Disables the target option for this compilation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5739,"byte_end":5743,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"host","qualname":"<Config>::host","value":"fn (&mut self, host: &str) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the host triple for this compilation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6078,"byte_end":6085,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Config>::out_dir","value":"fn <P> (&mut self, out: P) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the output directory for this compilation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6684,"byte_end":6691,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"profile","qualname":"<Config>::profile","value":"fn (&mut self, profile: &str) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the `CMAKE_BUILD_TYPE=build_type` variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6987,"byte_end":6997,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"static_crt","qualname":"<Config>::static_crt","value":"fn (&mut self, static_crt: bool) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the /MT flag or the /MD flag will be passed to msvc build tools.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7175,"byte_end":7184,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"build_arg","qualname":"<Config>::build_arg","value":"fn <A> (&mut self, arg: A) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the final `cmake` build step\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7443,"byte_end":7446,"line_start":231,"line_end":231,"column_start":12,"column_end":15},"name":"env","qualname":"<Config>::env","value":"fn <K, V> (&mut self, key: K, value: V) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Configure an environment variable for the `cmake` processes spawned by\n this crate in the `build` step.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":7794,"byte_end":7806,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"build_target","qualname":"<Config>::build_target","value":"fn (&mut self, target: &str) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets the build target for the final `cmake` build step, this will\n default to \"install\" if not specified.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8219,"byte_end":8229,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"uses_cxx11","qualname":"<Config>::uses_cxx11","value":"fn (&mut self) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Alters the default target triple on OSX to ensure that c++11 is\n available. Does not change the target triple if it is explicitly\n specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8531,"byte_end":8547,"line_start":261,"line_end":261,"column_start":12,"column_end":28},"name":"always_configure","qualname":"<Config>::always_configure","value":"fn (&mut self, always_configure: bool) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Forces CMake to always run before building the custom target.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":8715,"byte_end":8727,"line_start":267,"line_end":267,"column_start":12,"column_end":24},"name":"very_verbose","qualname":"<Config>::very_verbose","value":"fn (&mut self, value: bool) -> &mut Config","parent":null,"children":[],"decl_id":null,"docs":" Sets very verbose output.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":9089,"byte_end":9094,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"build","qualname":"<Config>::build","value":"fn (&mut self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Run this configuration, compiling the library with all the configured\n options.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2682,"byte_end":2688,"line_start":100,"line_end":100,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":84},{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,75,101,108,100,111,114,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,99,109,97,107,101,45,48,46,49,46,51,51,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2682,"byte_end":2688,"line_start":100,"line_end":100,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}}]}